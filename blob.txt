//jfr
<sys/stat.h>
This library provides a set of functions and data structures
relating to information about files and directories.
It is commonly used in POSIX-compliant systems for file handling and metadata retrieval.

The struct stat is a structure that holds info on a file or directory.
Stuff like file type, size, permissions, ownership, and timestamps.
We use stat() to fill in this struct. 
The call looks like:
char* file_path;
struct stat directory_info;
stat(file_path, &directory_info);
stat takes in the file path, and fills in our corresponding struct with gathered info.
&directory_info is used to pass the address of the struct to be filled, if we just passed directory_info-
it would just pass a copy of the value instead of our struct. (Due to Cs pass by value)


fread/fwrite - invoke(void *ptr, size_t size, size_t count, FILE *stream);
Arguments are:
void *ptr -    Where to data is to be read from.
size_t size -  Size of each element being read/written in bytes. (1 for chars)
size_t count - How many of these elements (sections of size) are to be read.
FILE *stream - The file in which to read/write data.

When we create a (FILE *file) stream, our second argument declaration is intrinsic to what it will do.
"w" will create a file based on the name if it does not exist, if the file does exist it is wiped.
"r" will read in the file (text-only in this argument) and will return NULL if the file doesn't exist.
